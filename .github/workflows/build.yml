name: Build Application

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.10']
        include:
          - os: windows-latest
            asset_name: ai-auto-free-windows.zip
            asset_path: dist/
          - os: ubuntu-latest
            asset_name: ai-auto-free-linux.zip
            asset_path: dist/
          - os: macos-latest
            asset_name: ai-auto-free-macos.zip
            asset_path: dist/

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --clean --noconfirm build.spec

    - name: Create ZIP archive
      run: |
        cd dist
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ../${{ matrix.asset_name }} "AI Auto Free.exe"
        else
          zip -r ../${{ matrix.asset_name }} "AI Auto Free"
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-build
        path: ${{ matrix.asset_name }}

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.asset_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
